// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_access.proto

#include "file_access.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sfcas {
namespace fileaccess {

inline constexpr StartUpReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : connect_state_{static_cast< ::sfcas::fileaccess::StartUpReply_ConnectState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartUpReply::StartUpReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartUpReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartUpReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartUpReplyDefaultTypeInternal() {}
  union {
    StartUpReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartUpReplyDefaultTypeInternal _StartUpReply_default_instance_;

inline constexpr StartUpMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_size_{::uint64_t{0u}},
        gid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StartUpMsg::StartUpMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StartUpMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartUpMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartUpMsgDefaultTypeInternal() {}
  union {
    StartUpMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartUpMsgDefaultTypeInternal _StartUpMsg_default_instance_;

inline constexpr MetaDataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MetaDataRequest::MetaDataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MetaDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaDataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaDataRequestDefaultTypeInternal() {}
  union {
    MetaDataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaDataRequestDefaultTypeInternal _MetaDataRequest_default_instance_;

inline constexpr MetaDataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_size_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MetaDataReply::MetaDataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MetaDataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaDataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaDataReplyDefaultTypeInternal() {}
  union {
    MetaDataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaDataReplyDefaultTypeInternal _MetaDataReply_default_instance_;

inline constexpr DataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{::uint64_t{0u}},
        size_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataRequest::DataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataRequestDefaultTypeInternal() {}
  union {
    DataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataRequestDefaultTypeInternal _DataRequest_default_instance_;

inline constexpr DataReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataReply::DataReply(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataReplyDefaultTypeInternal() {}
  union {
    DataReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataReplyDefaultTypeInternal _DataReply_default_instance_;
}  // namespace fileaccess
}  // namespace sfcas
static ::_pb::Metadata file_level_metadata_file_5faccess_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_file_5faccess_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_file_5faccess_2eproto = nullptr;
const ::uint32_t TableStruct_file_5faccess_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::MetaDataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::MetaDataRequest, _impl_.filename_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::MetaDataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::MetaDataReply, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::MetaDataReply, _impl_.file_size_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpMsg, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpMsg, _impl_.gid_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpMsg, _impl_.address_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpMsg, _impl_.filename_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpMsg, _impl_.file_size_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::StartUpReply, _impl_.connect_state_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataRequest, _impl_.filename_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataRequest, _impl_.size_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataReply, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sfcas::fileaccess::DataReply, _impl_.chunk_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::sfcas::fileaccess::MetaDataRequest)},
        {9, -1, -1, sizeof(::sfcas::fileaccess::MetaDataReply)},
        {19, -1, -1, sizeof(::sfcas::fileaccess::StartUpMsg)},
        {31, -1, -1, sizeof(::sfcas::fileaccess::StartUpReply)},
        {40, -1, -1, sizeof(::sfcas::fileaccess::DataRequest)},
        {51, -1, -1, sizeof(::sfcas::fileaccess::DataReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sfcas::fileaccess::_MetaDataRequest_default_instance_._instance,
    &::sfcas::fileaccess::_MetaDataReply_default_instance_._instance,
    &::sfcas::fileaccess::_StartUpMsg_default_instance_._instance,
    &::sfcas::fileaccess::_StartUpReply_default_instance_._instance,
    &::sfcas::fileaccess::_DataRequest_default_instance_._instance,
    &::sfcas::fileaccess::_DataReply_default_instance_._instance,
};
const char descriptor_table_protodef_file_5faccess_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021file_access.proto\022\020sfcas.fileaccess\032\033g"
    "oogle/protobuf/empty.proto\"#\n\017MetaDataRe"
    "quest\022\020\n\010filename\030\001 \001(\t\"3\n\rMetaDataReply"
    "\022\017\n\007address\030\001 \001(\t\022\021\n\tfile_size\030\002 \001(\004\"O\n\n"
    "StartUpMsg\022\013\n\003gid\030\001 \001(\005\022\017\n\007address\030\002 \001(\t"
    "\022\020\n\010filename\030\003 \001(\t\022\021\n\tfile_size\030\004 \001(\004\"\221\001"
    "\n\014StartUpReply\022B\n\rconnect_state\030\001 \001(\0162+."
    "sfcas.fileaccess.StartUpReply.ConnectSta"
    "te\"=\n\014ConnectState\022\007\n\003NEW\020\000\022\r\n\tRECONNECT"
    "\020\001\022\n\n\006BACKUP\020\002\022\t\n\005ERROR\020\003\"=\n\013DataRequest"
    "\022\020\n\010filename\030\001 \001(\t\022\016\n\006offset\030\002 \001(\004\022\014\n\004si"
    "ze\030\003 \001(\004\"\032\n\tDataReply\022\r\n\005chunk\030\001 \001(\0142\325\002\n"
    "\nFileAccess\022S\n\021connect_to_master\022\034.sfcas"
    ".fileaccess.StartUpMsg\032\036.sfcas.fileacces"
    "s.StartUpReply\"\000\022K\n\017upload_metadata\022\034.sf"
    "cas.fileaccess.StartUpMsg\032\026.google.proto"
    "buf.Empty\"\000(\001\022Y\n\021get_file_metadata\022!.sfc"
    "as.fileaccess.MetaDataRequest\032\037.sfcas.fi"
    "leaccess.MetaDataReply\"\000\022J\n\010get_data\022\035.s"
    "fcas.fileaccess.DataRequest\032\033.sfcas.file"
    "access.DataReply\"\0000\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_file_5faccess_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_file_5faccess_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_file_5faccess_2eproto = {
    false,
    false,
    828,
    descriptor_table_protodef_file_5faccess_2eproto,
    "file_access.proto",
    &descriptor_table_file_5faccess_2eproto_once,
    descriptor_table_file_5faccess_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_file_5faccess_2eproto::offsets,
    file_level_metadata_file_5faccess_2eproto,
    file_level_enum_descriptors_file_5faccess_2eproto,
    file_level_service_descriptors_file_5faccess_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_file_5faccess_2eproto_getter() {
  return &descriptor_table_file_5faccess_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_file_5faccess_2eproto(&descriptor_table_file_5faccess_2eproto);
namespace sfcas {
namespace fileaccess {
const ::google::protobuf::EnumDescriptor* StartUpReply_ConnectState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_file_5faccess_2eproto);
  return file_level_enum_descriptors_file_5faccess_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t StartUpReply_ConnectState_internal_data_[] = {
    262144u, 0u, };
bool StartUpReply_ConnectState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr StartUpReply_ConnectState StartUpReply::NEW;
constexpr StartUpReply_ConnectState StartUpReply::RECONNECT;
constexpr StartUpReply_ConnectState StartUpReply::BACKUP;
constexpr StartUpReply_ConnectState StartUpReply::ERROR;
constexpr StartUpReply_ConnectState StartUpReply::ConnectState_MIN;
constexpr StartUpReply_ConnectState StartUpReply::ConnectState_MAX;
constexpr int StartUpReply::ConnectState_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class MetaDataRequest::_Internal {
 public:
};

MetaDataRequest::MetaDataRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.MetaDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE MetaDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : filename_(arena, from.filename_),
        _cached_size_{0} {}

MetaDataRequest::MetaDataRequest(
    ::google::protobuf::Arena* arena,
    const MetaDataRequest& from)
    : ::google::protobuf::Message(arena) {
  MetaDataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:sfcas.fileaccess.MetaDataRequest)
}
inline PROTOBUF_NDEBUG_INLINE MetaDataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filename_(arena),
        _cached_size_{0} {}

inline void MetaDataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MetaDataRequest::~MetaDataRequest() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.MetaDataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetaDataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MetaDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.MetaDataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filename_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetaDataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> MetaDataRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MetaDataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MetaDataRequest, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(MetaDataRequest, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\10\0\0\0\0\0\0"
    "sfcas.fileaccess.MetaDataRequest"
    "filename"
  }},
};

::uint8_t* MetaDataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.MetaDataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sfcas.fileaccess.MetaDataRequest.filename");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.MetaDataRequest)
  return target;
}

::size_t MetaDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.MetaDataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetaDataRequest::_class_data_ = {
    MetaDataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MetaDataRequest::GetClassData() const {
  return &_class_data_;
}

void MetaDataRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetaDataRequest*>(&to_msg);
  auto& from = static_cast<const MetaDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.MetaDataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetaDataRequest::CopyFrom(const MetaDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.MetaDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetaDataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MetaDataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MetaDataRequest::InternalSwap(MetaDataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
}

::google::protobuf::Metadata MetaDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[0]);
}
// ===================================================================

class MetaDataReply::_Internal {
 public:
};

MetaDataReply::MetaDataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.MetaDataReply)
}
inline PROTOBUF_NDEBUG_INLINE MetaDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : address_(arena, from.address_),
        _cached_size_{0} {}

MetaDataReply::MetaDataReply(
    ::google::protobuf::Arena* arena,
    const MetaDataReply& from)
    : ::google::protobuf::Message(arena) {
  MetaDataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.file_size_ = from._impl_.file_size_;

  // @@protoc_insertion_point(copy_constructor:sfcas.fileaccess.MetaDataReply)
}
inline PROTOBUF_NDEBUG_INLINE MetaDataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void MetaDataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.file_size_ = {};
}
MetaDataReply::~MetaDataReply() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.MetaDataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MetaDataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.address_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MetaDataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.MetaDataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.file_size_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MetaDataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> MetaDataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MetaDataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 file_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MetaDataReply, _impl_.file_size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MetaDataReply, _impl_.file_size_)}},
    // string address = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MetaDataReply, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1;
    {PROTOBUF_FIELD_OFFSET(MetaDataReply, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 file_size = 2;
    {PROTOBUF_FIELD_OFFSET(MetaDataReply, _impl_.file_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\36\7\0\0\0\0\0\0"
    "sfcas.fileaccess.MetaDataReply"
    "address"
  }},
};

::uint8_t* MetaDataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.MetaDataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sfcas.fileaccess.MetaDataReply.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 file_size = 2;
  if (this->_internal_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_file_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.MetaDataReply)
  return target;
}

::size_t MetaDataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.MetaDataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // uint64 file_size = 2;
  if (this->_internal_file_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_file_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MetaDataReply::_class_data_ = {
    MetaDataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MetaDataReply::GetClassData() const {
  return &_class_data_;
}

void MetaDataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MetaDataReply*>(&to_msg);
  auto& from = static_cast<const MetaDataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.MetaDataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_file_size() != 0) {
    _this->_internal_set_file_size(from._internal_file_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetaDataReply::CopyFrom(const MetaDataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.MetaDataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MetaDataReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MetaDataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MetaDataReply::InternalSwap(MetaDataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
        swap(_impl_.file_size_, other->_impl_.file_size_);
}

::google::protobuf::Metadata MetaDataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[1]);
}
// ===================================================================

class StartUpMsg::_Internal {
 public:
};

StartUpMsg::StartUpMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.StartUpMsg)
}
inline PROTOBUF_NDEBUG_INLINE StartUpMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : address_(arena, from.address_),
        filename_(arena, from.filename_),
        _cached_size_{0} {}

StartUpMsg::StartUpMsg(
    ::google::protobuf::Arena* arena,
    const StartUpMsg& from)
    : ::google::protobuf::Message(arena) {
  StartUpMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, file_size_),
           offsetof(Impl_, gid_) -
               offsetof(Impl_, file_size_) +
               sizeof(Impl_::gid_));

  // @@protoc_insertion_point(copy_constructor:sfcas.fileaccess.StartUpMsg)
}
inline PROTOBUF_NDEBUG_INLINE StartUpMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        filename_(arena),
        _cached_size_{0} {}

inline void StartUpMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_size_),
           0,
           offsetof(Impl_, gid_) -
               offsetof(Impl_, file_size_) +
               sizeof(Impl_::gid_));
}
StartUpMsg::~StartUpMsg() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.StartUpMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartUpMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.address_.Destroy();
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartUpMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.StartUpMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  ::memset(&_impl_.file_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gid_) -
      reinterpret_cast<char*>(&_impl_.file_size_)) + sizeof(_impl_.gid_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartUpMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 51, 2> StartUpMsg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartUpMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 file_size = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StartUpMsg, _impl_.file_size_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.file_size_)}},
    // int32 gid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartUpMsg, _impl_.gid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.gid_)}},
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.address_)}},
    // string filename = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 gid = 1;
    {PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.gid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string filename = 3;
    {PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 file_size = 4;
    {PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.file_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\33\0\7\10\0\0\0\0"
    "sfcas.fileaccess.StartUpMsg"
    "address"
    "filename"
  }},
};

::uint8_t* StartUpMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.StartUpMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 gid = 1;
  if (this->_internal_gid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_gid(), target);
  }

  // string address = 2;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sfcas.fileaccess.StartUpMsg.address");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string filename = 3;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sfcas.fileaccess.StartUpMsg.filename");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint64 file_size = 4;
  if (this->_internal_file_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_file_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.StartUpMsg)
  return target;
}

::size_t StartUpMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.StartUpMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 2;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // string filename = 3;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // uint64 file_size = 4;
  if (this->_internal_file_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_file_size());
  }

  // int32 gid = 1;
  if (this->_internal_gid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_gid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartUpMsg::_class_data_ = {
    StartUpMsg::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartUpMsg::GetClassData() const {
  return &_class_data_;
}

void StartUpMsg::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartUpMsg*>(&to_msg);
  auto& from = static_cast<const StartUpMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.StartUpMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_file_size() != 0) {
    _this->_internal_set_file_size(from._internal_file_size());
  }
  if (from._internal_gid() != 0) {
    _this->_internal_set_gid(from._internal_gid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartUpMsg::CopyFrom(const StartUpMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.StartUpMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartUpMsg::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartUpMsg::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartUpMsg::InternalSwap(StartUpMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.gid_)
      + sizeof(StartUpMsg::_impl_.gid_)
      - PROTOBUF_FIELD_OFFSET(StartUpMsg, _impl_.file_size_)>(
          reinterpret_cast<char*>(&_impl_.file_size_),
          reinterpret_cast<char*>(&other->_impl_.file_size_));
}

::google::protobuf::Metadata StartUpMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[2]);
}
// ===================================================================

class StartUpReply::_Internal {
 public:
};

StartUpReply::StartUpReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.StartUpReply)
}
StartUpReply::StartUpReply(
    ::google::protobuf::Arena* arena, const StartUpReply& from)
    : StartUpReply(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StartUpReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StartUpReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.connect_state_ = {};
}
StartUpReply::~StartUpReply() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.StartUpReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StartUpReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StartUpReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.StartUpReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connect_state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StartUpReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> StartUpReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StartUpReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .sfcas.fileaccess.StartUpReply.ConnectState connect_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StartUpReply, _impl_.connect_state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StartUpReply, _impl_.connect_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sfcas.fileaccess.StartUpReply.ConnectState connect_state = 1;
    {PROTOBUF_FIELD_OFFSET(StartUpReply, _impl_.connect_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StartUpReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.StartUpReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .sfcas.fileaccess.StartUpReply.ConnectState connect_state = 1;
  if (this->_internal_connect_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_connect_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.StartUpReply)
  return target;
}

::size_t StartUpReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.StartUpReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .sfcas.fileaccess.StartUpReply.ConnectState connect_state = 1;
  if (this->_internal_connect_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_connect_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StartUpReply::_class_data_ = {
    StartUpReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StartUpReply::GetClassData() const {
  return &_class_data_;
}

void StartUpReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StartUpReply*>(&to_msg);
  auto& from = static_cast<const StartUpReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.StartUpReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_connect_state() != 0) {
    _this->_internal_set_connect_state(from._internal_connect_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StartUpReply::CopyFrom(const StartUpReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.StartUpReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StartUpReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StartUpReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StartUpReply::InternalSwap(StartUpReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.connect_state_, other->_impl_.connect_state_);
}

::google::protobuf::Metadata StartUpReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[3]);
}
// ===================================================================

class DataRequest::_Internal {
 public:
};

DataRequest::DataRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.DataRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : filename_(arena, from.filename_),
        _cached_size_{0} {}

DataRequest::DataRequest(
    ::google::protobuf::Arena* arena,
    const DataRequest& from)
    : ::google::protobuf::Message(arena) {
  DataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, size_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::size_));

  // @@protoc_insertion_point(copy_constructor:sfcas.fileaccess.DataRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : filename_(arena),
        _cached_size_{0} {}

inline void DataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::size_));
}
DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.DataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.DataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filename_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.size_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 45, 2> DataRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.filename_)}},
    // uint64 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DataRequest, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.offset_)}},
    // uint64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DataRequest, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 offset = 2;
    {PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 size = 3;
    {PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\34\10\0\0\0\0\0\0"
    "sfcas.fileaccess.DataRequest"
    "filename"
  }},
};

::uint8_t* DataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.DataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sfcas.fileaccess.DataRequest.filename");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_offset(), target);
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.DataRequest)
  return target;
}

::size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.DataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // uint64 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_offset());
  }

  // uint64 size = 3;
  if (this->_internal_size() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataRequest::_class_data_ = {
    DataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataRequest::GetClassData() const {
  return &_class_data_;
}

void DataRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataRequest*>(&to_msg);
  auto& from = static_cast<const DataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.DataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_size() != 0) {
    _this->_internal_set_size(from._internal_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataRequest::InternalSwap(DataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.size_)
      + sizeof(DataRequest::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[4]);
}
// ===================================================================

class DataReply::_Internal {
 public:
};

DataReply::DataReply(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sfcas.fileaccess.DataReply)
}
inline PROTOBUF_NDEBUG_INLINE DataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : chunk_(arena, from.chunk_),
        _cached_size_{0} {}

DataReply::DataReply(
    ::google::protobuf::Arena* arena,
    const DataReply& from)
    : ::google::protobuf::Message(arena) {
  DataReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:sfcas.fileaccess.DataReply)
}
inline PROTOBUF_NDEBUG_INLINE DataReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : chunk_(arena),
        _cached_size_{0} {}

inline void DataReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DataReply::~DataReply() {
  // @@protoc_insertion_point(destructor:sfcas.fileaccess.DataReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.chunk_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataReply::Clear() {
// @@protoc_insertion_point(message_clear_start:sfcas.fileaccess.DataReply)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataReply::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DataReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DataReply_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes chunk = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DataReply, _impl_.chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes chunk = 1;
    {PROTOBUF_FIELD_OFFSET(DataReply, _impl_.chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DataReply::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sfcas.fileaccess.DataReply)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes chunk = 1;
  if (!this->_internal_chunk().empty()) {
    const std::string& _s = this->_internal_chunk();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sfcas.fileaccess.DataReply)
  return target;
}

::size_t DataReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sfcas.fileaccess.DataReply)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (!this->_internal_chunk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_chunk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataReply::_class_data_ = {
    DataReply::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataReply::GetClassData() const {
  return &_class_data_;
}

void DataReply::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataReply*>(&to_msg);
  auto& from = static_cast<const DataReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sfcas.fileaccess.DataReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chunk().empty()) {
    _this->_internal_set_chunk(from._internal_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataReply::CopyFrom(const DataReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sfcas.fileaccess.DataReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataReply::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataReply::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataReply::InternalSwap(DataReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chunk_, &other->_impl_.chunk_, arena);
}

::google::protobuf::Metadata DataReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_file_5faccess_2eproto_getter, &descriptor_table_file_5faccess_2eproto_once,
      file_level_metadata_file_5faccess_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace fileaccess
}  // namespace sfcas
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
